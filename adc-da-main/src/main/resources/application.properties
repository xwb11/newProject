# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.driverClassName = oracle.jdbc.OracleDriver
#数据库服务器外网ip221.239.111.146 内网10.10.0.3
#spring.datasource.url = jdbc:oracle:thin:@//192.168.1.114:1521/XE
#spring.datasource.url = jdbc:oracle:thin:@//192.168.0.153:1521/XE
#spring.datasource.url = jdbc:oracle:thin:@//192.168.1.139:1521/XE
#spring.datasource.url = jdbc:oracle:thin:@//192.168.0.5:1521/XE
spring.datasource.url = jdbc:oracle:thin:@//localhost:1521/XE
#spring.datasource.username = students
#spring.datasource.username = code
#spring.datasource.password = 1234
spring.datasource.username = myroot
spring.datasource.password = 12345

spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize = 5
spring.datasource.minIdle = 5
spring.datasource.maxActive = 20
# 配置获取连接等待超时的时间
spring.datasource.maxWait = 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis = 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis = 300000
spring.datasource.validationQuery= 'SELECT 1 FROM DUAL'
spring.datasource.testWhileIdle = true
spring.datasource.testOnBorrow = false
spring.datasource.testOnReturn = false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements = true
spring.datasource.maxPoolPreparedStatementPerConnectionSize = 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters = stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties = 'druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000'
# 合并多个DruidDataSource的监控数据
#useGlobalDataSourceStat: true
spring.datasource.mergeSql=true
spring.datasource.slowSqlMillis=5000
spring.datasource.logSlowSql=true

# ===============================
#update dufaut embedded tomcat port
server.port=8081

# mybatis_config
mybatis.config-locations=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath*:mybatis/mapper/**/*.xml

#显示sql
spring.profiles.active=dev
logging.level.com.adc=DEBUG
logging.level.org.hibernate=info
logging.level.org.springframework=info

# 系统日志类别dev:开发模式不拦截方法记日志, custom:客户自定义需要拦截记日志的方法, sys:系统原设需要拦截记日志的方法
sysLogType=dev

adminPath=/a
restPath=/api
# file模块上传文件的服务器地址
file.path=/Files

spring.http.multipart.max-request-size=3MB
spring.http.multipart.max-file-size=3MB

#rabbitMQ
spring.rabbitmq.host=192.168.1.219
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.publisher-confirms=true

#redis
# Redis服务器地址
spring.redis.host=221.239.111.146
# Redis服务器连接端口
spring.redis.port=15777
# Redis服务器连接密码（默认为空）
spring.redis.password=cvdecs

#线程池
core.pool.size=10
max.pool.size=30
keep.alive.seconds=60
queue.capacity=8

#elastic search
#clusterName=elasticsearch
#clusterNodes=10.10.0.3:9300

##测试
IMAGE_SERVER_IP = 106.2.13.200
#访问ip
ACCESS_IMAGE_IP = 106.2.13.200
#上传根目录
IMAGE_SERVER_DIRECTORY = recruitment
#访问图片根目录
ACCESS_IMAGE_DIRECTORY =
#访问图片的服务器端口
ACCESS_IMAGE_PORT = 8090
#上传服务器的端口
IMAGE_SERVER_PORT = 21
#ftp登录的用户名和密码
FTP_USERNAME = ftpuser
FTP_PASSWORD = ftpuser

#部署环境
#linux  ----1   window----0
is_Linux = 0

#ftp传输方式 主动模式---1  被动模式---0
ftp_transport = 1

#安全验证--请求超时时间（分钟）
request_timeOut = 5

#安全验证--加密开关(开----1，关----0)（只能在window上使用）
encryption_switch = 1

#密码加密开关(开----1，关----0)（只能在window上使用）
password_encryption = 1

#是否启动视频转码工具
is_start_video = 1

#视频转码工具地址
#测试(window)
video_transcoding = C:/Recruitment/ffmpeg-20180818-de1b44c-win64-static/

#ftp根目录地址
#测试(window)
ftp_url = C:/webFile/
